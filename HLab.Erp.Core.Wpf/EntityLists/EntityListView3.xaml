<UserControl x:Class="HLab.Erp.Core.Wpf.EntityLists.EntityListView3"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:core="clr-namespace:HLab.Erp.Core;assembly=HLab.Erp.Core"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:icons="clr-namespace:HLab.Icons.Wpf.Icons;assembly=HLab.Icons.Wpf" 
             xmlns:lang="clr-namespace:HLab.Localization.Wpf.Lang;assembly=HLab.Localization.Wpf" xmlns:entitySelectors="clr-namespace:HLab.Erp.Core.EntitySelectors"
             xmlns:entitySelectors1="clr-namespace:HLab.Erp.Core.Wpf.EntitySelectors"
             xmlns:entityLists="clr-namespace:HLab.Erp.Core.Wpf.EntityLists"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=core:IEntityListViewModel, IsDesignTimeCreatable=false}"
             d:DesignHeight="450" d:DesignWidth="800"
             Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
             >
    <UserControl.Resources>
        <ResourceDictionary>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <ScrollViewer Grid.Column="0" VerticalScrollBarVisibility="Auto" Visibility="{Binding ShowFilters, Converter={StaticResource ToVisibilityConverter}}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/><!--  -->
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <icons:IconView Path="icons/filters/filter" Foreground="{DynamicResource HLab.Brushes.Foreground}"/>
                    <ComboBox Grid.Column="1"
                        IsTextSearchEnabled="False"
                        IsEditable="True" 
                        Text="{Binding FiltersPresetName}" 
                        SelectedValue="{Binding FiltersPresetSelected}" 
                        ItemsSource="{Binding FilterPresets}"
                        />
                    <StackPanel Orientation="Horizontal" Grid.Column="2">
                        <Button Command="{Binding SaveFiltersPresetCommand}"><icons:IconView Path="icons/save" Height="15"/></Button>
                    </StackPanel>
                </Grid>
                <ItemsControl Grid.Row="1" ItemsSource="{Binding Filters}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </Grid>
        </ScrollViewer>
        
        <GridSplitter Grid.Column="1" Grid.RowSpan="4" />

        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <StackPanel Grid.Row="0" Orientation="Vertical">

                <StackPanel Orientation="Horizontal" Visibility="{Binding ShowMenu, Converter={StaticResource ToVisibilityConverter}}">
                    <ToggleButton IsChecked="{Binding ShowFilters}" >
                    
                        <ToggleButton.ToolTip>
                            <lang:Localize Id="{}{Filters}"/>
                        </ToggleButton.ToolTip>
                        <icons:IconView Path="icons/filters/filter" MaxHeight="15" MaxWidth="15"/>
                    </ToggleButton>

                    <Button Command ="{Binding AddCommand}" IsEnabled="{Binding IsEnabledSimpleAddButton}">
                    
                        <Button.ToolTip>
                            <lang:Localize Id="{}{Add}"/>
                        </Button.ToolTip>
                        <icons:IconView Path="Icons/Add" MaxHeight="15" MaxWidth="15"/>
                    </Button>

                    <entitySelectors1:ForeignView DockPanel.Dock="Top"
                                    IsReadOnly="False"
                                    ModelClass="{Binding AddArgumentClass}"
                                    ListClass="{Binding AddListClass}"
                                    Command="{Binding AddCommand}"
                                    >
                        <icons:IconView Path="Icons/Add" MaxHeight="15" MaxWidth="15"/>
                    </entitySelectors1:ForeignView>


                    <Button Command="{Binding DeleteCommand}">
                        <Button.ToolTip>
                            <lang:Localize Id="{}{Delete}"/>
                        </Button.ToolTip>
                        <icons:IconView Path="Icons/Delete" MaxHeight="15" MaxWidth="15"/>
                    </Button>

                    <Button Command="{Binding RefreshCommand}">
                        <Button.ToolTip>
                            <lang:Localize Id="{}{Refresh}"/>
                        </Button.ToolTip>
                        <icons:IconView Path="Icons/Refresh" MaxHeight="15"/>
                    </Button>

                    <Button Command="{Binding OpenCommand}">
                        <Button.ToolTip>
                            <lang:Localize Id="{}{Open}"/>
                        </Button.ToolTip>
                        <icons:IconView Path="Icons/OpenForeign" MaxHeight="15"/>
                    </Button>

                    <Button Command="{Binding ExportCommand}">
                        <Button.ToolTip>
                            <lang:Localize Id="{}{Export}"/>
                        </Button.ToolTip>
                        <icons:IconView Path="Icons/Export" MaxHeight="15"/>
                    </Button>

                    <Button Command="{Binding ImportCommand}">
                        <Button.ToolTip>
                            <lang:Localize Id="{}{Import}"/>
                        </Button.ToolTip>
                        <icons:IconView Path="Icons/Import" MaxHeight="15"/>
                    </Button>
                    
                    <Button Click="Button_Click">
                        <Button.ToolTip>
                            <lang:Localize Id="{}{Resize}"/>
                        </Button.ToolTip>
                        <icons:IconView Path="Icons/horizontal-resize" MaxHeight="15"/>
                    </Button>
                    
                    <Button Click="ButtonBase_OnClick" BorderThickness="0" BorderBrush="Transparent" Background="Transparent">
                        <Button.ToolTip>
                            <lang:Localize Id="{}{Expand}"/>
                        </Button.ToolTip>
                        ...
                        <!--<icons:IconView Path="Icons/Import" MaxHeight="15"/>-->
                    </Button>

                    <Button Command="{Binding HideMenuCommand}" Content="&lt;">
                        <Button.ToolTip>
                            <lang:Localize Id="{}{Resize}"/>
                        </Button.ToolTip>
                        
                    </Button>

                </StackPanel>
            </StackPanel>
            <TextBlock Visibility="Collapsed" x:Name="MessageTextBlock" Grid.Row="1" Text="{Binding ErrorMessage}" Foreground="{DynamicResource MahApps.Brushes.SystemControlErrorTextForeground}"/>

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <DataGrid
                      Grid.Column="1"
                       VerticalAlignment="Top"
                       ItemsSource="{Binding ListViewModel}" 
                       SelectedItem="{Binding SelectedViewModel}"
                       x:Name="ListView"
                       Background="{DynamicResource MahApps.Brushes.DataGrid.Background}"

                       AutoGenerateColumns="False"

                       ScrollViewer.CanContentScroll ="True"

                       VirtualizingPanel.IsVirtualizing="True"    
                       VirtualizingPanel.IsContainerVirtualizable="True"
                       VirtualizingPanel.VirtualizationMode="Recycling"

                       ScrollViewer.HorizontalScrollBarVisibility="Auto"
                       ScrollViewer.VerticalScrollBarVisibility="Auto"

            >
<!-- 
                       VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                       VirtualizingPanel.CacheLengthUnit="Pixel"
                       VirtualizingPanel.ScrollUnit="Pixel"     
                       ScrollViewer.IsDeferredScrollingEnabled="True"
-->
                <DataGrid.Resources>
                    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
                        <Setter Property="AllowDrop" Value="True"/>
                        <EventSetter Event="PreviewMouseMove" Handler="ListView_PreviewMouseMove"/>
                        <EventSetter Event="Drop" Handler="ListView_Drop"/>
                        <EventSetter Event="DragOver" Handler="ListView_DragOver"></EventSetter>
                        <EventSetter Event="DragLeave" Handler="ListView_DragLeave"></EventSetter>
                    </Style>

                    <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="FontWeight" Value="Black" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="10" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                    </Style>
                </DataGrid.Resources>
            
                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">

                        <EventSetter Event="MouseDoubleClick" Handler="DataGrid_MouseDoubleClick"/>
                        <Style.Triggers>

                            <DataTrigger Binding="{Binding IsValid}" Value="False">
                                <Setter Property="Opacity" Value="0.3" />
                            </DataTrigger>

                            <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent4}" />
                            </Trigger>

                            <Trigger Property="IsSelected"
                                      Value="True">
                                 <Setter Property="Foreground"
                                         Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text}" />
                                 <Setter Property="Background"
                                         Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Background}" />
                                 <Setter Property="BorderBrush"
                                         Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.BorderBrush}" />
                                 <Setter Property="BorderThickness"
                                         Value="2" />
                             </Trigger>

                            <Trigger Property="Tag"
                                      Value="InsertUp">
                                 <Setter Property="BorderBrush"
                                         Value="{DynamicResource MahApps.Brushes.Badged.Background}" />
                                 <Setter Property="BorderThickness"
                                         Value="0,5,0,0" />
                             </Trigger>
                            <Trigger Property="Tag"
                                      Value="InsertDown">
                                 <Setter Property="BorderBrush"
                                         Value="{DynamicResource MahApps.Brushes.Badged.Background}" />
                                 <Setter Property="BorderThickness"
                                         Value="0,0,0,5" />
                             </Trigger>

                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>

                <!--<ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel
                            IsItemsHost = "True"
                            />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>-->

            </DataGrid>
            <Button
                Grid.Column="0" 
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Width="15"
                Padding="0"
                Height="35" 
                Visibility="{Binding ShowMenu, Converter={StaticResource ToCollapsedConverter}}" 
                Command="{Binding ShowMenuCommand}"   
                Content="&gt;"
                />

            </Grid>
        </Grid>
        
    </Grid>
</UserControl>
