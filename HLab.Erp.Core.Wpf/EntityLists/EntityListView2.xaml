<UserControl x:Class="HLab.Erp.Core.EntityLists.EntityListView2"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:core="clr-namespace:HLab.Erp.Core;assembly=HLab.Erp.Core"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:icons="clr-namespace:HLab.Icons.Wpf.Icons;assembly=HLab.Icons.Wpf" 
             xmlns:lang="clr-namespace:HLab.Localization.Wpf.Lang;assembly=HLab.Localization.Wpf"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=core:IEntityListViewModel, IsDesignTimeCreatable=false}"
             d:DesignHeight="450" d:DesignWidth="800"
             Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
             >
    <UserControl.Resources>

    </UserControl.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <ScrollViewer Grid.Column="0" Grid.Row="3">
                    <ItemsControl ItemsSource="{Binding Filters}">
                        <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    </ItemsControl>
        </ScrollViewer>

        <StackPanel Grid.Column="1" Grid.Row="0" Orientation="Horizontal">

            <Button Command ="{Binding AddCommand}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Trigger>
                                <DataTrigger Binding="{Binding AddAllowed}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.ToolTip><lang:Localize Id="{}{Add}"/></Button.ToolTip>
                <icons:IconView Path="Icons/Add" MaxHeight="15" MaxWidth="15"/>
            </Button>

            <Button Grid.Row="0" Grid.Column="1" Command="{Binding DeleteCommand}">                    
                <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <DataTrigger Binding="{Binding DeleteAllowed}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                
                <Button.ToolTip><lang:Localize Id="{}{Delete}"/></Button.ToolTip>
                <icons:IconView Path="Icons/Delete" MaxHeight="15"/>
            </Button>
            
            <Button Grid.Row="1" Grid.Column="0" Command="{Binding RefreshCommand}">                    
                <Button.ToolTip><lang:Localize Id="{}{Refresh}"/></Button.ToolTip>
                <icons:IconView Path="Icons/Refresh" MaxHeight="15"/>
            </Button>

            <Button Grid.Row="1" Grid.Column="1" Command="{Binding OpenCommand}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>

                <Button.ToolTip><lang:Localize Id="{}{Open}"/></Button.ToolTip>
                <icons:IconView Path="Icons/OpenForeign" MaxHeight="15"/>
            </Button>
            <Button Command="{Binding ExportCommand}">                    
                <Button.ToolTip><lang:Localize Id="{}{Refresh}"/></Button.ToolTip>
                <icons:IconView Path="Icons/Export" MaxHeight="15"/>
            </Button>

            <Button Command="{Binding ImportCommand}">                    
                <Button.ToolTip><lang:Localize Id="{}{Refresh}"/></Button.ToolTip>
                <icons:IconView Path="Icons/Import" MaxHeight="15"/>
            </Button>

        </StackPanel>

        <TextBlock Grid.Column="1" Grid.Row="2" Text="{Binding Message}" Foreground="Red"/>

         <ListView Grid.Column="1" Grid.Row="3"
                   VerticalAlignment="Top"
                   ItemsSource="{Binding ListCollectionView}" 
                   SelectedItem="{Binding SelectedViewModel}"
                   VirtualizingStackPanel.VirtualizationMode="Recycling"
                   VirtualizingPanel.IsContainerVirtualizable="True"
                   VirtualizingPanel.IsVirtualizing="True"
                   ScrollViewer.CanContentScroll ="True"
                   x:Name="ListView"
                   AlternationCount="2"
                   Background="{DynamicResource MahApps.Brushes.DataGrid.Background}"
         ><!--AlternatingRowBackground="#08FFFFFF"-->
            <ListView.Resources>
                <Style TargetType="DataGridColumnHeader">
                    <EventSetter Event="Click" Handler="DataGridColumnHeader_Click" />
                </Style>
                <Style TargetType="{x:Type GridViewColumnHeader}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="FontWeight" Value="Black" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                </Style>
            </ListView.Resources>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
                    <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                    
                    <Style.Triggers>
                         <DataTrigger Binding="{Binding IsValid}" Value="False">
                             <Setter Property="Opacity" Value="0.3" />
                         </DataTrigger>
                         <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                             <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent4}" />
                         </Trigger>
                         <Trigger Property="IsSelected"
                                  Value="True">
                             <Setter Property="Foreground"
                                     Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text}" />
                             <Setter Property="Background"
                                     Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Background}" />
                             <Setter Property="BorderBrush"
                                     Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.BorderBrush}" />
                             <Setter Property="BorderThickness"
                                     Value="2" />
                         </Trigger>

                         <DataTrigger Binding="{Binding IsSelected}" Value="True">
                             <Setter Property="Background" Value="DarkGreen" />
                         </DataTrigger>

                     </Style.Triggers>
                 </Style>

            </ListView.ItemContainerStyle>


             <i:Interaction.Triggers>
                 <i:EventTrigger EventName="MouseDoubleClick">
                     <i:InvokeCommandAction Command="{Binding OpenCommand}"/>
                 </i:EventTrigger>
             </i:Interaction.Triggers>
         
         </ListView>
    </Grid>
</UserControl>
